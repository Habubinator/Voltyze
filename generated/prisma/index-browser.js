
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Api_sourceScalarFieldEnum = {
  api_id: 'api_id',
  link: 'link',
  detailed_link: 'detailed_link',
  last_update: 'last_update',
  next_update: 'next_update',
  update_interval_ms: 'update_interval_ms',
  comments_link: 'comments_link'
};

exports.Prisma.CommentsScalarFieldEnum = {
  comment_id: 'comment_id',
  description_id: 'description_id',
  comment_href: 'comment_href',
  author_name: 'author_name',
  user_id: 'user_id',
  rating: 'rating',
  comment_text: 'comment_text'
};

exports.Prisma.ImagesScalarFieldEnum = {
  image_id: 'image_id',
  description_id: 'description_id',
  image_href: 'image_href'
};

exports.Prisma.Station_connectorScalarFieldEnum = {
  connector_id: 'connector_id',
  description_id: 'description_id',
  connector_type_id: 'connector_type_id',
  connector_status_id: 'connector_status_id',
  connector_name: 'connector_name',
  power_kw: 'power_kw',
  current_amp: 'current_amp',
  price_per_start: 'price_per_start',
  price: 'price',
  currency: 'currency',
  free_min_after_charging: 'free_min_after_charging',
  price_per_min_after_charging: 'price_per_min_after_charging'
};

exports.Prisma.Station_desc_apiScalarFieldEnum = {
  id: 'id',
  api_id: 'api_id',
  og_api_pk: 'og_api_pk',
  description_id: 'description_id'
};

exports.Prisma.Station_descriptionScalarFieldEnum = {
  description_id: 'description_id',
  station_id: 'station_id',
  station_name: 'station_name',
  description_string: 'description_string',
  location_type: 'location_type',
  country_code: 'country_code',
  support_phone: 'support_phone',
  is_support_charging: 'is_support_charging',
  is_support_reservation: 'is_support_reservation',
  location_name: 'location_name',
  last_charging: 'last_charging',
  is_public: 'is_public',
  is_fast_charger: 'is_fast_charger',
  is_open_24x7: 'is_open_24x7',
  min_power_kw: 'min_power_kw',
  max_power_kw: 'max_power_kw',
  last_status_update: 'last_status_update',
  network_id: 'network_id',
  status_id: 'status_id',
  station_flags: 'station_flags'
};

exports.Prisma.Station_markerScalarFieldEnum = {
  station_id: 'station_id',
  longitude: 'longitude',
  latitude: 'latitude'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  passwordHash: 'passwordHash',
  roleId: 'roleId',
  isBanned: 'isBanned',
  emailVerificationKey: 'emailVerificationKey',
  emailVerifiedAt: 'emailVerifiedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SavedStationsScalarFieldEnum = {
  userId: 'userId',
  markerId: 'markerId'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.PermissionScalarFieldEnum = {
  id: 'id',
  resource: 'resource',
  action: 'action'
};

exports.Prisma.RolePermissionScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  permissionId: 'permissionId'
};

exports.Prisma.RecoveryTokenScalarFieldEnum = {
  userId: 'userId',
  tokenHash: 'tokenHash',
  expiresAt: 'expiresAt'
};

exports.Prisma.UserPermissionsScalarFieldEnum = {
  userId: 'userId',
  rolePermissionId: 'rolePermissionId'
};

exports.Prisma.UserSessionScalarFieldEnum = {
  id: 'id',
  ip: 'ip',
  userAgent: 'userAgent',
  refreshToken: 'refreshToken',
  userId: 'userId',
  lastRefreshAt: 'lastRefreshAt'
};

exports.Prisma.UserActivityScalarFieldEnum = {
  userId: 'userId',
  ip: 'ip',
  lastActivityAt: 'lastActivityAt'
};

exports.Prisma.UserBanScalarFieldEnum = {
  userId: 'userId',
  reason: 'reason',
  expiredAt: 'expiredAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.api_sourceOrderByRelevanceFieldEnum = {
  link: 'link',
  detailed_link: 'detailed_link',
  comments_link: 'comments_link'
};

exports.Prisma.commentsOrderByRelevanceFieldEnum = {
  comment_href: 'comment_href',
  author_name: 'author_name',
  comment_text: 'comment_text'
};

exports.Prisma.imagesOrderByRelevanceFieldEnum = {
  image_href: 'image_href'
};

exports.Prisma.station_connectorOrderByRelevanceFieldEnum = {
  connector_name: 'connector_name',
  currency: 'currency'
};

exports.Prisma.station_descriptionOrderByRelevanceFieldEnum = {
  station_name: 'station_name',
  description_string: 'description_string',
  location_type: 'location_type',
  country_code: 'country_code',
  support_phone: 'support_phone',
  location_name: 'location_name'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  passwordHash: 'passwordHash',
  emailVerificationKey: 'emailVerificationKey'
};

exports.Prisma.RoleOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.PermissionOrderByRelevanceFieldEnum = {
  resource: 'resource',
  action: 'action'
};

exports.Prisma.RecoveryTokenOrderByRelevanceFieldEnum = {
  tokenHash: 'tokenHash'
};

exports.Prisma.UserSessionOrderByRelevanceFieldEnum = {
  id: 'id',
  ip: 'ip',
  userAgent: 'userAgent',
  refreshToken: 'refreshToken'
};

exports.Prisma.UserActivityOrderByRelevanceFieldEnum = {
  ip: 'ip'
};

exports.Prisma.UserBanOrderByRelevanceFieldEnum = {
  reason: 'reason'
};


exports.Prisma.ModelName = {
  api_source: 'api_source',
  comments: 'comments',
  images: 'images',
  station_connector: 'station_connector',
  station_desc_api: 'station_desc_api',
  station_description: 'station_description',
  station_marker: 'station_marker',
  User: 'User',
  SavedStations: 'SavedStations',
  Role: 'Role',
  Permission: 'Permission',
  RolePermission: 'RolePermission',
  RecoveryToken: 'RecoveryToken',
  UserPermissions: 'UserPermissions',
  UserSession: 'UserSession',
  UserActivity: 'UserActivity',
  UserBan: 'UserBan'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
